; (function () {

  const getPageTitle = async tabId => (await browser.tabs.get(tabId)).title;

  window.onRequest(['https://api.bilibili.com/x/player/pagelist?*'], function (response, pageContext) {
    const { data } = JSON.parse(new TextDecoder('utf-8').decode(response));
    const { tabId } = pageContext;
    const cidTitle = pageContext.metaInfo.cidTitle = pageContext.metaInfo.cidTitle || new Map();
    data.forEach(({ cid, part }) => {
      cidTitle.set(cid, (async () => {
        const title = await getPageTitle(tabId);
        const aidTitle = title.replace(/_.*$/, '');
        const partTitle = part ? ' - ' + part : '';
        return aidTitle + partTitle;
      })());
    });
  });

  window.onRequest([
    'https://comment.bilibili.com/*.xml',
    'https://api.bilibili.com/x/v1/dm/list.so?oid=*',
  ], async function (response, pageContext, { url }) {
    const { cid, danmaku } = window.danmaku.parser.bilibili_xml(response);
    if (danmaku.length === 0) return;
    const { tabId } = pageContext;
    const cidTitle = pageContext.metaInfo.cidTitle;
    const title = await (cidTitle && cidTitle.get(cid) || getPageTitle(tabId));
    const name = 'B' + cid + (title ? ' - ' + title : '');
    const danmakuList = pageContext.danmakuList = pageContext.danmakuList || [];
    danmakuList.push({
      id: `bilibili-${cid}`,
      meta: { name, url },
      content: danmaku,
    });
  });

  /**
   * @param {{ total: number, received: number }[]} pendingList
   */
  const checkFinish = function (pendingList) {
    const finished = [];
    for (let i = 0; i < pendingList.length;) {
      const item = pendingList[i];
      if (item.total === item.received) {
        finished.push(...pendingList.splice(i, 1));
      } else {
        i++;
      }
    }
    return finished;
  };

  window.onRequest(['https://api.bilibili.com/x/v2/dm/wbi/web/seg.so?*'], async function (response, pageContext, { url }) {
    const cid = new URL(url).searchParams.get('oid');
    const { danmaku } = window.danmaku.parser.bilibili(response);
    if (danmaku.length === 0) return;
    const { tabId } = pageContext;
    const cidTitle = pageContext.metaInfo.cidTitle;
    const title = await (cidTitle && cidTitle.get(cid) || getPageTitle(tabId));
    const name = 'B' + cid + (title ? ' - ' + title : '');
    const pendingList = pageContext.pendingList = pageContext.pendingList || [];
    const danmakuList = pageContext.danmakuList = pageContext.danmakuList || [];
    const id = `bilibili-pb-${cid}`;
    let danmakuItem = pendingList.find(item => item.id === id);
    if (!danmakuItem) {
      danmakuItem = { id };
      pendingList.push(danmakuItem);
    }
    if (!danmakuItem.meta) {
      danmakuItem.meta = { name, url: [url] };
      danmakuItem.received = 1;
      danmakuItem.content = danmaku;
    } else {
      danmakuItem.meta.url.push(url);
      danmakuItem.received++;
      danmakuItem.content.push(...danmaku);
    }
    danmakuList.push(...checkFinish(pendingList));
  });

  window.onRequest(['https://api.bilibili.com/x/v2/dm/web/view?*'], async function (response, pageContext, { url }) {
    const cid = new URL(url).searchParams.get('oid');
    const PbfTypes = function PbfTypes() {
      'use strict';
      const self = this;
      /*
       message DmWebViewReply {
         required DmSegConfig dmSge = 4;
       }

       message DmSegConfig {
         required int64 total = 2;
       }
       */
      /* eslint-disable */
      'use strict'; // code generated by pbf v3.2.1

      // DmWebViewReply ========================================

      var DmWebViewReply = self.DmWebViewReply = {};

      DmWebViewReply.read = function (pbf, end) {
        return pbf.readFields(DmWebViewReply._readField, { dmSeg: null }, end);
      };
      DmWebViewReply._readField = function (tag, obj, pbf) {
        if (tag === 4) obj.dmSeg = DmSegConfig.read(pbf, pbf.readVarint() + pbf.pos);
      };
      DmWebViewReply.write = function (obj, pbf) {
        if (obj.dmSeg) pbf.writeMessage(4, DmSegConfig.write, obj.dmSeg);
      };

      // DmSegConfig ========================================

      var DmSegConfig = self.DmSegConfig = {};

      DmSegConfig.read = function (pbf, end) {
        return pbf.readFields(DmSegConfig._readField, { total: 0 }, end);
      };
      DmSegConfig._readField = function (tag, obj, pbf) {
        if (tag === 2) obj.total = pbf.readVarint(true);
      };
      DmSegConfig.write = function (obj, pbf) {
        if (obj.total) pbf.writeVarintField(2, obj.total);
      };
      /* eslint-enable */
    };
    const types = new PbfTypes();

    /* global Pbf */
    const pbf = new Pbf(new Uint8Array(response));
    const data = types.DmWebViewReply.read(pbf);
    const dmSegTotal = data.dmSeg.total;
    const pendingList = pageContext.pendingList = pageContext.pendingList || [];
    const danmakuList = pageContext.danmakuList = pageContext.danmakuList || [];
    const id = `bilibili-pb-${cid}`;
    let danmakuItem = pendingList.find(item => item.id === id);
    if (!danmakuItem) {
      danmakuItem = { id, total: dmSegTotal };
      pendingList.push(danmakuItem);
    } else {
      danmakuItem.total = dmSegTotal;
    }
    danmakuList.push(...checkFinish(pendingList));
  });

}());
